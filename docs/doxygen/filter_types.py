#! python3
# Script to filter out the types from functions for xml generated by Doxygen with doxypypy
# since python tends to be dynamically typed
# doxypypy seems to substitute the type with the name so that it doubles up under sphinx with Breathe otherwise

import sys
import os
import xml.etree.ElementTree as ET
from pathlib import Path


class FilterDoxyTypes(object):
    '''Sphinx Build Script'''

    def __init__(self):
        '''Class Init'''
        self.XMLDIR = os.path.abspath('build/xml')

    def parsefiles(self):
        for filename in Path(self.XMLDIR).glob('**/*.xml'):
            tree1 = ET.parse(filename)
            root1 = tree1.getroot()
            funcs = root1.findall('.//memberdef[@kind="function"]')
            for func in funcs:
                params = func.findall('param')
                for param in params:
                    typetag = param.find('.//type')
                    typereftag = param.find('.//type/ref')
                    defnametag = param.find('.//defname')
                    if typetag.text == defnametag.text:
                        typetag.text = ''
                    if typereftag is not None and typereftag.text == defnametag.text:
                        typetag.remove(typereftag)
                    if defnametag.text == 'self':
                        func.remove(param)
            tree1.write(filename)

    def main(self):
        if len(sys.argv) > 1:
            self.XMLDIR = os.path.abspath(sys.argv[1])
        self.parsefiles()
        return


if __name__ == "__main__":
    FilterDoxyTypes().main()
